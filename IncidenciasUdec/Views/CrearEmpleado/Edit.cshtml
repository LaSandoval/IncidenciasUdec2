@model IncidenciasUdec.Models.USUARIO

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/bootstrap")
</head>
<body>
    <div style="margin-top:10px">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @if (TempData["Mensaje"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @TempData["Mensaje"]
                    </div>
                }
                <h4>Editar datos de colaborador</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div style="margin-top:10px" class="form-group">
                    @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="margin-top:10px" class="form-group">
                    @Html.LabelFor(model => model.APELLIDO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.APELLIDO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="margin-top:10px" class="form-group">
                    @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="margin-top:10px" class="form-group">
                    @Html.LabelFor(model => model.PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="margin-top:10px" class="form-group">
                    @Html.LabelFor(model => model.TELEFONO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TELEFONO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TELEFONO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="margin-top:10px" class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        <a href="@Url.Action("Index","CrearEmpleado")" class="btn btn-primary">Regresar</a>
                    </div>
                </div>
            </div>
        }
    </div>
</body>
</html>
